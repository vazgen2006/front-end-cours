// խնդիր 1
// Գրել multiplyFive անվամբ ֆունկցիա, որը ստանում է թիվ և վերադարձնում դրա հնգապատիկը, օր․՝ 7 => 35
// խնդիր 2
// Գրել ֆունկցիա, որը ստանում է զանգված և վերադարձնում է մեջտեղի էլեմենտի արժեքը,  օր․՝ [4, 8, 2, 15, 9, 7, 3] => 15, զույգ քանակի դեպքում աջ էլէմենտը, օր․՝ [4, 8, 7, 3] => 7
// խնդիր 3
// Գրել ֆունկցիա, որը ստանում է զանգված և վերադարձնում է մեջտեղի էլեմենտի արժեքը և ինդեքսը
// խնդիր 4
// Գրել ֆունկցիա, որը ստանում է ուղղանկյուն եռանկյան էջերի երկարությունները, հաշվում է ներքնաձիգի երկարությունը, մակերեսը, և այդ ամենը վերադարձնում է օբյեկտի տեսքով
// խնդիր 5
// Գրել ֆունկցիա, որը ստանում է վայրկյանների քանակը թվի տեսքով, իսկ դուք պետք է վերածեք այն ժամերի, թողնելով միայն ամբողջ մասը, օր․՝ 575186 => 159
// խնդիր 6
// Գրել ֆունկցիա, որը ստանում է երկու string տիպի արժեքներ, օր․՝ ("ewfgjewg4w5geg", "g"), երկրորդ string-ի երկարությունը միշտ 1 է,
// Դուէ պետք է գտնեք երկրորդ պարամետրի հանդիպումների քանակը առաջին պարամետրում, մեր դեպքում "g" հանդիպում է 4 անգամ, պատ.՝ 4;
// խնդիր 7
// Գրել ֆունկցիա, որը ստանում է մի թիվ և վերադարձնում է դրա հակադարձը, օր․՝ 3458 => 8543
// խնդիր 8
// Գրել ֆունկցիա, որը ստանում է թվերի զանգված և վերադարձնում երկրորդ ամենամեծ թիվը, օր․՝ [4, 8, 2, 15, 9, 7, 3] => 9
// խնդիր 9
// Գրել ֆունկցիա, որը ստանում է թվերի զանգված և վերադարձնում երկրորդ ամենամեծ թիվը և երկրորդ ամենափոքր թիվը զանգվածի տեսքով, օր․՝ [4, 3, 8, 2, 15, 9, 7, 6] => [9, 3]


#include <stdio.h> // Подключаем
#include <conio.h> // модули.
 
const int N = 5;
int main()
{     
 int mass[N]; 
 int i, min, max; 
 
 printf(" Vvedite massiv iz 5 elementov: \n"); 
 
  for (i=0; i<N; i++) 
   { printf(" Vvedite element[%d]: ", i);
     scanf("%d", &mass[i]); }
 
  /* Нахождение минимального элемента */
  min=mass[0]; // Первый элемент принимаем за минимальный.
  for(i=1; i<N; i++) 
   if(mass[i]<min) // Если следущий элемент меньше минимального, то...
    { min=mass[i]; } // назначаем его минимальным.
      
   /* Ннахождение максимального элемента */
  max=mass[0]; // Первый элемент принимаем за максимальный.
  for(i=1; i<N; i++) 
   if (mass[i]>max) // Если следущий элемент больше максимального, то...
   { max=mass[i]; } // назначаем его максимальным.
   
  printf("\n Min element = %d.", min); // Выводим минимальный элемент.
  printf("\n Max element = %d.", max); // Выводим минимальный элемент.
  
 getch(); 
 return 0; 
}